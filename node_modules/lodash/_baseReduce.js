/**
 * The base implementation of `_.reduce` and `_.reduceRight`, without support
 * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
 *
 * @private
 * @param {Array|Object***REMOVED*** collection The collection to iterate over.
 * @param {Function***REMOVED*** iteratee The function invoked per iteration.
 * @param {****REMOVED*** accumulator The initial value.
 * @param {boolean***REMOVED*** initAccum Specify using the first or last element of
 *  `collection` as the initial value.
 * @param {Function***REMOVED*** eachFunc The function to iterate over `collection`.
 * @returns {****REMOVED*** Returns the accumulated value.
 */
function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
  eachFunc(collection, function(value, index, collection) {
    accumulator = initAccum
      ? (initAccum = false, value)
      : iteratee(accumulator, value, index, collection);
  ***REMOVED***);
  return accumulator;
***REMOVED***

module.exports = baseReduce;
