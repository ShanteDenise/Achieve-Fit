var baseGet = require('./_baseGet'),
    baseSet = require('./_baseSet'),
    castPath = require('./_castPath');

/**
 * The base implementation of  `_.pickBy` without support for iteratee shorthands.
 *
 * @private
 * @param {Object***REMOVED*** object The source object.
 * @param {string[]***REMOVED*** paths The property paths to pick.
 * @param {Function***REMOVED*** predicate The function invoked per property.
 * @returns {Object***REMOVED*** Returns the new object.
 */
function basePickBy(object, paths, predicate) {
  var index = -1,
      length = paths.length,
      result = {***REMOVED***;

  while (++index < length) {
    var path = paths[index],
        value = baseGet(object, path);

    if (predicate(value, path)) {
      baseSet(result, castPath(path, object), value);
    ***REMOVED***
  ***REMOVED***
  return result;
***REMOVED***

module.exports = basePickBy;
