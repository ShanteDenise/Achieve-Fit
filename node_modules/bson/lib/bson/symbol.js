// Custom inspect property name / symbol.
var inspect = Buffer ? require('util').inspect.custom || 'inspect' : 'inspect';

/**
 * A class representation of the BSON Symbol type.
 *
 * @class
 * @deprecated
 * @param {string***REMOVED*** value the string representing the symbol.
 * @return {Symbol***REMOVED***
 */
function Symbol(value) {
  if (!(this instanceof Symbol)) return new Symbol(value);
  this._bsontype = 'Symbol';
  this.value = value;
***REMOVED***

/**
 * Access the wrapped string value.
 *
 * @method
 * @return {String***REMOVED*** returns the wrapped string.
 */
Symbol.prototype.valueOf = function() {
  return this.value;
***REMOVED***;

/**
 * @ignore
 */
Symbol.prototype.toString = function() {
  return this.value;
***REMOVED***;

/**
 * @ignore
 */
Symbol.prototype[inspect] = function() {
  return this.value;
***REMOVED***;

/**
 * @ignore
 */
Symbol.prototype.toJSON = function() {
  return this.value;
***REMOVED***;

module.exports = Symbol;
module.exports.Symbol = Symbol;
